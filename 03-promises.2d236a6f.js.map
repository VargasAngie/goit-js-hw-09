{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,EAAAP,GAASQ,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAE9DG,EAAAP,GAASQ,OAAOE,QAAQ,sBAAoBP,QAAeC,M,CARlDO,SAASC,cAAc,SAC/BC,iBAAiB,UAWtB,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAASL,SAASM,iBAAiB,SACnCC,EAAaC,SAASH,EAAO,GAAGI,OAChCC,EAAYF,SAASH,EAAO,GAAGI,OAC/BE,EAASH,SAASH,EAAO,GAAGI,OAElC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMpB,EAAW,EAAIoB,EACfnB,EAAQc,EAAcG,EAAYE,EAExCC,YAAW,KACTtB,EAAcC,EAAUC,EAAM,GAC7BA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nfunction handleSubmit (event) {\n  event.preventDefault();\n  const inputs = document.querySelectorAll('input');\n  const firstDelay = parseInt(inputs[0].value);\n  const delayStep = parseInt(inputs[1].value);\n  const amount = parseInt(inputs[2].value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = 1 + i;\n    const delay = firstDelay + (delayStep * i);\n\n    setTimeout(() => {\n      createPromise(position, delay);\n    }, delay);\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","inputs","querySelectorAll","firstDelay","parseInt","value","delayStep","amount","i","setTimeout"],"version":3,"file":"03-promises.2d236a6f.js.map"}