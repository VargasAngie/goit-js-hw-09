{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAWtB,SAAuBC,G,kBAQnB,IAAMC,EAAW,EAAIC,EACfC,EAAQC,EAAcC,EAAYH,EAExCI,YAAW,YApBf,SAAuBL,EAAUE,GACTI,KAAKC,SAAW,GAEpCC,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANT,EAAM,OAEtEM,EAAAd,GAASe,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANT,EAAM,M,CAgBjEW,CAAcb,EAAUE,E,GACvBA,E,EAZLH,EAAMe,iBAMN,IALA,IAAMC,EAASnB,SAASoB,iBAAiB,SACnCb,EAAac,SAASF,EAAO,GAAGG,OAChCd,EAAYa,SAASF,EAAO,GAAGG,OAC/BC,EAASF,SAASF,EAAO,GAAGG,OAEzBE,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nfunction handleSubmit (event) {\n  event.preventDefault();\n  const inputs = document.querySelectorAll('input');\n  const firstDelay = parseInt(inputs[0].value);\n  const delayStep = parseInt(inputs[1].value);\n  const amount = parseInt(inputs[2].value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = 1 + i;\n    const delay = firstDelay + (delayStep * i);\n\n    setTimeout(() => {\n      createPromise(position, delay);\n    }, delay);\n  }\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","position","i","delay","firstDelay","delayStep","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","preventDefault","inputs","querySelectorAll","parseInt","value","amount","i1","_loop"],"version":3,"file":"03-promises.a2969a55.js.map"}